{"version":3,"sources":["templates.js","elements.js","functions.js","script.js"],"names":["baseJsscTemplate","jsscTempTemplate","jsscWaveTemplate","jssc","document","createElement","insertAdjacentHTML","classList","add","stepsObj","paletteWidth","carriageWidth","paletteWaveBlockWidth","paletteTempBlockWidth","paletteFullWidth","cursorPosition","wavesRanges","gradientWaveRanges","tempsRanges","gradientTempRanges","jsscContent","querySelector","jsscTempContent","cloneNode","jsscWaveContent","jsscModal","removeChild","appendChild","waveCarriage","tempCarriage","body","jsscContentToggle","isCurrentTemp","jsscToggle","strObj","wave","undefined","validValuesConverter","temp","getComputedStyle","display","style","offsetWidth","Math","round","floor","ceil","setCarriage","str","arr","split","resultArr","Array","forEach","elem","indexOf","i","parseInt","slice","push","getRange","num","paletteType","length","getLeft","currentRangeCount","currentRangeKs","percentage","proportion","currentRangeNMs","getColor","initial","red","green","blue","final","result","toString","color","carriageCircle","carriageCircleSpan","carriageCountSpan","left","backgroundColor","innerHTML","nextStep","currentPosition","prevStep","dragAndDropCarriage","cursor","pageX","getWaveFromTemp","kelvins","b","getNearStep","inputNum","isNumeric","isNaN","parseFloat","isFinite","isInputCorrect","onclick","onmousedown","inputError","inputField","contains","remove","value","boxShadow","onmousemove","onmouseup","oninput"],"mappings":"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","file":"all.js","sourcesContent":["let baseJsscTemplate = '' +\r\n'<div class=\"jssc__modal\">' +\r\n\t'<div class=\"jssc__modal-close\">' + \r\n\t\t'<svg version=\"1.1\" baseProfile=\"full\" width=\"20\" height=\"20\"' +\r\n\t\t'xmlns=\"http://www.w3.org/2000/svg\">' +\r\n\t\t\t'<line x1=\"0\" x2=\"20\" y1=\"0\" y2=\"20\" stroke=\"#9A9EA0\"' + \r\n\t\t\t' stroke-width=\"2\"/>' + \r\n\t\t\t'<line x1=\"0\" x2=\"20\" y1=\"20\" y2=\"0\" stroke=\"#9A9EA0\"' + \r\n\t\t\t' stroke-width=\"2\"/>' + \r\n\t\t'</svg>' +\r\n\t'</div>' +\r\n\t'<div class=\"jssc__content\">' +\r\n\r\n\t'</div>' +\r\n'</div>';\r\n\r\nlet jsscTempTemplate = '' +\r\n'<div class=\"jssc__hat\">' +\r\n\t'<div class=\"jssc__title\"><span>Температура, К</span></div>' +\r\n\t'<div class=\"jssc__type-link\">' + \r\n\t\t'<span>Длина волны, λ</span>' +\r\n\t\t'<div class=\"jssc__type-link-img jssc__type-link-img_wave\"></div>' +\r\n\t'</div>' +\r\n'</div>' +\r\n'<div class=\"jssc__color-palette jssc__color-palette_temp\">' +\r\n\t'<div class=\"jssc__carriage-wrapper\">' +\r\n\t\t'<div class=\"jssc__count\"><span>400</span></div>' +\r\n\t\t'<div class=\"jssc__left-arrow-wrapper\">' + \r\n\t\t\t'<div class=\"jssc__left-arrow\"></div>' +\r\n\t\t'</div>' +\r\n\t\t'<div class=\"jssc__carriage\"></div>' +\r\n\t\t'<div class=\"jssc__right-arrow-wrapper\">' + \r\n\t\t\t'<div class=\"jssc__right-arrow\"></div>' +\r\n\t\t'</div>' +\r\n\t\t'<div class=\"jssc__bottom-arrow-wrapper\">' +\r\n\t\t\t'<div class=\"jssc__bottom-arrow\"></div>' +\r\n\t\t'</div>' +\r\n\t'</div>' +\r\n'</div>' +\r\n'<div class=\"jssc__marking\">' + \r\n\t'<span>2200к</span>' +\r\n\t'<span>2700-3000к</span>' +\r\n\t'<span>4000-4500к</span>' +\r\n\t'<span>4800к</span>' +\r\n\t'<span>5000-6000к</span>' +\r\n\t'<span>7000-7500к</span>' +\r\n\t'<span>10000к</span>' +\r\n\t'<span>20000к</span>' +\r\n'</div>' +\r\n'<div class=\"jssc__temp-sectors\">' + \r\n\t'<span>свеча</span>' +\r\n\t'<span>лампа</span>' +\r\n\t'<span>день</span>' +\r\n\t'<span>небо</span>' +\r\n'</div>' +\r\n'<div class=\"jssc__input\">' +\r\n\t'<input type=\"text\" name=\"jssc__input\" placeholder=\"Поле для ввода\">' +\r\n\t'<div class=\"jssc__input-error\">Введите значение температуры (в кельвинах) вручную, или используйте селектор цвета.</div>' +\r\n'</div>';\r\n\r\nlet jsscWaveTemplate = '' +\r\n'<div class=\"jssc__hat\">' +\r\n\t'<div class=\"jssc__title\"><span>Длина волны, λ</span></div>' +\r\n\t'<div class=\"jssc__type-link\">' + \r\n\t\t'<span>Температура, К</span>' +\r\n\t\t'<div class=\"jssc__type-link-img jssc__type-link-img_temp\"></div>' +\r\n\t'</div>' +\r\n'</div>' +\r\n'<div class=\"jssc__color-palette jssc__color-palette_wave\">' +\r\n\t'<div class=\"jssc__carriage-wrapper\">' +\r\n\t\t'<div class=\"jssc__count\"><span></span></div>' +\r\n\t\t'<div class=\"jssc__left-arrow-wrapper\">' + \r\n\t\t\t'<div class=\"jssc__left-arrow\"></div>' +\r\n\t\t'</div>' +\r\n\t\t'<div class=\"jssc__carriage\"><span></span></div>' +\r\n\t\t'<div class=\"jssc__right-arrow-wrapper\">' + \r\n\t\t\t'<div class=\"jssc__right-arrow\"></div>' +\r\n\t\t'</div>' +\r\n\t\t'<div class=\"jssc__bottom-arrow-wrapper\">' +\r\n\t\t\t'<div class=\"jssc__bottom-arrow\"></div>' +\r\n\t\t'</div>' +\r\n\t'</div>' +\r\n'</div>' +\r\n'<div class=\"jssc__marking\">' + \r\n\t'<span>УФ</span>' +\r\n\t'<span>380-440нм</span>' +\r\n\t'<span>440-485нм</span>' +\r\n\t'<span>485-500нм</span>' +\r\n\t'<span>500-565нм</span>' +\r\n\t'<span>565-590нм</span>' +\r\n\t'<span>590-625нм</span>' +\r\n\t'<span>625-740нм</span>' +\r\n\t'<span>ИК</span>' +\r\n'</div>' +\r\n'<div class=\"jssc__input\">' +\r\n\t'<input type=\"text\" name=\"jssc__input\" placeholder=\"Поле для ввода\">' +\r\n\t'<div class=\"jssc__input-error\">Введите значение длины волны (в нм) вручную, или используйте селектор цвета.</div>' +\r\n'</div>';","let jssc = document.createElement('div');\r\n\tjssc.insertAdjacentHTML('afterBegin', baseJsscTemplate);\r\n\tjssc.classList.add('jssc');\r\n\r\nlet stepsObj = {};\r\n\r\nlet paletteWidth, carriageWidth, paletteWaveBlockWidth,\r\n\tpaletteTempBlockWidth, paletteFullWidth, cursorPosition = null;\r\n\r\nlet wavesRanges = [0, 410, 463, 493, 533, 578, 608, 683, 1000],\r\n\tgradientWaveRanges = ['000000', '7100C4', '004DFF', '00B8D9', '00C43A', 'FFFF00', 'FF8C00', 'FF0000', '000000'],\r\n\ttempsRanges = [2200, 2850, 4250, 4800, 5500, 7250, 10000, 20000],\r\n\tgradientTempRanges = ['DC841A', 'F7C16B', 'FFECC1', 'FFFAEA', 'E4F5FD', '92B9D6', '5D90BF', '0000A2'];\r\n\r\nlet jsscContent = jssc.querySelector('.jssc__content');\r\n\r\nlet\tjsscTempContent = jsscContent.cloneNode(true),\r\n\tjsscWaveContent = jsscContent.cloneNode(true);\r\njsscTempContent.insertAdjacentHTML('beforeEnd', jsscTempTemplate);\r\njsscWaveContent.insertAdjacentHTML('afterBegin', jsscWaveTemplate);\r\n\r\nlet jsscModal = jssc.querySelector('.jssc__modal');\r\njsscModal.removeChild(jsscContent);\r\njsscModal.appendChild(jsscTempContent);\r\n\r\nlet waveCarriage = jsscWaveContent.querySelector('.jssc__carriage-wrapper'),\r\n\ttempCarriage = jsscTempContent.querySelector('.jssc__carriage-wrapper');\r\n\r\ndocument.body.appendChild(jssc);","function jsscContentToggle(isCurrentTemp) {\r\n\r\n\tif (isCurrentTemp) {\r\n\t\tjsscModal.removeChild(jsscTempContent);\r\n\t\tjsscModal.appendChild(jsscWaveContent);\r\n\t} else {\r\n\t\tjsscModal.removeChild(jsscWaveContent);\r\n\t\tjsscModal.appendChild(jsscTempContent);\r\n\t}\r\n}\r\n\r\nfunction jsscToggle(strObj) {\r\n\r\n\tstrObj = strObj ? strObj : {};\r\n\r\n\tif (strObj.wave !== undefined) {\r\n\r\n\t\tstepsObj.wave = validValuesConverter(strObj.wave);\r\n\t} else {\r\n\r\n\t\tstepsObj.wave = validValuesConverter('400, 440, 550, 600, 650-660, 1000');\r\n\t}\r\n\r\n\tif (strObj.temp !== undefined) {\r\n\r\n\t\tstepsObj.temp = validValuesConverter(strObj.temp);\r\n\t} else {\r\n\r\n\t\tstepsObj.temp = validValuesConverter('5500-5550, 6000, 7000, 8000, 9000, 10000, 11000, 12000, 13000, 14000, 15000, 16000, 20000');\r\n\t}\r\n\r\n\tif (getComputedStyle(jssc).display === 'none') {\r\n\t\tjssc.style.display = 'flex';\r\n\r\n\t\tif (!paletteWidth) {\r\n\r\n\t\t\tpaletteWidth = document.querySelector('.jssc__color-palette').offsetWidth;\r\n\r\n\t\t\tcarriageWidth = document.querySelector('.jssc__carriage-wrapper').offsetWidth;\r\n\r\n\t\t\tpaletteWaveBlockWidth = Math.round(paletteWidth / 8);\r\n\t\t\tpaletteTempBlockWidth = Math.floor(paletteWidth / 7) +\r\n\t\t\t\t\t\t\t\t\t(Math.ceil(paletteWidth / 7) - Math.floor(paletteWidth / 7)) / 2;\r\n\r\n\t\t\tsetCarriage(stepsObj.wave[0]);\r\n\t\t\tsetCarriage(stepsObj.temp[0], 'temp');\r\n\t\t}\r\n\r\n\t} else {\r\n\t\tjssc.style.display = 'none';\r\n\t}\r\n}\r\n\r\nfunction validValuesConverter(str) {\r\n\r\n\tlet arr = str.split(','),\r\n\t\tresultArr = new Array();\r\n\r\n\tarr.forEach(function(elem) {\r\n\t\tif (~elem.indexOf('-')) {\r\n\t\t\tfor (let  i = parseInt(elem); i <= parseInt(elem.slice(elem.indexOf('-') + 1)); i++) {\r\n\t\t\t\tresultArr.push(i);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresultArr.push(parseInt(elem));\r\n\t\t}\r\n\t});\r\n\r\n\treturn resultArr;\r\n}\r\n\r\nfunction getRange(num, paletteType) {\r\n\r\n\tpaletteType = (paletteType !== undefined) ? paletteType : 'wave';\r\n\r\n\tif (paletteType === 'temp') {\r\n\r\n\t\tfor (let i = 0; i < tempsRanges.length; i++) {\r\n\t\t\tif ((num <= tempsRanges[i + 1]) && (num >= tempsRanges[i])) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} else if (paletteType === 'wave') {\r\n\r\n\t\tfor (let i = 0; i < wavesRanges.length - 1; i++) {\r\n\t\t\tif ((num <= wavesRanges[i + 1]) && (num >= wavesRanges[i])) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n\r\n\treturn false;\r\n}\r\n\r\nfunction getLeft(num, paletteType) {\r\n\r\n\tpaletteType = (paletteType !== undefined) ? paletteType : 'wave';\r\n\r\n\tif (paletteType === 'temp') {\r\n\r\n\t\tlet currentRangeCount = tempsRanges[getRange(num, 'temp') + 1] - tempsRanges[getRange(num, 'temp')],\r\n\t\t\tcurrentRangeKs = num - tempsRanges[getRange(num, 'temp')],\r\n\t\t\tpercentage = currentRangeKs / (currentRangeCount / 100),\r\n\t\t\tproportion = percentage / 100;\r\n\r\n\t\treturn paletteTempBlockWidth * getRange(num, 'temp') + paletteTempBlockWidth * proportion - carriageWidth / 2;\r\n\t} else if (paletteType === 'wave') {\r\n\r\n\t\tlet currentRangeCount = wavesRanges[getRange(num, 'wave') + 1] - wavesRanges[getRange(num, 'wave')],\r\n\t\t\tcurrentRangeNMs = num - wavesRanges[getRange(num, 'wave')],\r\n\t\t\tpercentage = currentRangeNMs / (currentRangeCount / 100),\r\n\t\t\tproportion = percentage / 100;\r\n\r\n\t\treturn paletteWaveBlockWidth * getRange(num, 'wave') + paletteWaveBlockWidth * proportion - carriageWidth / 2;\r\n\t}\r\n}\r\n\r\nfunction getColor(num, paletteType) {\r\n\r\n\tpaletteType = (paletteType !== undefined) ? paletteType : 'wave';\r\n\r\n\tif (paletteType === 'temp') {\r\n\r\n\t\tlet currentRangeCount = tempsRanges[getRange(num, 'temp') + 1] - tempsRanges[getRange(num, 'temp')],\r\n\t\t\tcurrentRangeKs = num - tempsRanges[getRange(num, 'temp')],\r\n\t\t\tpercentage = currentRangeKs / (currentRangeCount / 100),\r\n\t\t\tproportion = percentage / 100;\r\n\r\n\t\tlet initial = {\r\n\t\t\tred: gradientTempRanges[getRange(num, 'temp')].slice(0, 2),\r\n\t\t\tgreen: gradientTempRanges[getRange(num, 'temp')].slice(2, 4),\r\n\t\t\tblue: gradientTempRanges[getRange(num, 'temp')].slice(4, 6)\r\n\t\t},\r\n\t\tfinal = {\r\n\t\t\tred: gradientTempRanges[getRange(num, 'temp') + 1].slice(0, 2),\r\n\t\t\tgreen: gradientTempRanges[getRange(num, 'temp') + 1].slice(2, 4),\r\n\t\t\tblue: gradientTempRanges[getRange(num, 'temp') + 1].slice(4, 6)\r\n\t\t},\r\n\t\tresult = {\r\n\t\t\tred: Math.round(parseInt(initial.red, 16) + (parseInt(final.red, 16) - parseInt(initial.red, 16)) * proportion).toString(16),\r\n\t\t\tgreen: Math.round(parseInt(initial.green, 16) + (parseInt(final.green, 16) - parseInt(initial.green, 16)) * proportion).toString(16),\r\n\t\t\tblue: Math.round(parseInt(initial.blue, 16) + (parseInt(final.blue, 16) - parseInt(initial.blue, 16)) * proportion).toString(16)\r\n\t\t},\r\n\t\tcolor;\r\n\r\n\t\tfor (color in result) {\r\n\t\t\tresult[color] = (result[color].length < 2) ? '0' + result[color] : result[color];\r\n\t\t}\r\n\r\n\t\treturn result.red + result.green + result.blue;\r\n\r\n\r\n\t} else if (paletteType === 'wave') {\r\n\r\n\t\tlet currentRangeCount = wavesRanges[getRange(num) + 1] - wavesRanges[getRange(num)],\r\n\t\t\tcurrentRangeNMs = num - wavesRanges[getRange(num)],\r\n\t\t\tpercentage = currentRangeNMs / (currentRangeCount / 100),\r\n\t\t\tproportion = percentage / 100;\r\n\r\n\t\tlet initial = {\r\n\t\t\tred: gradientWaveRanges[getRange(num)].slice(0, 2),\r\n\t\t\tgreen: gradientWaveRanges[getRange(num)].slice(2, 4),\r\n\t\t\tblue: gradientWaveRanges[getRange(num)].slice(4, 6)\r\n\t\t},\r\n\t\tfinal = {\r\n\t\t\tred: gradientWaveRanges[getRange(num) + 1].slice(0, 2),\r\n\t\t\tgreen: gradientWaveRanges[getRange(num) + 1].slice(2, 4),\r\n\t\t\tblue: gradientWaveRanges[getRange(num) + 1].slice(4, 6)\r\n\t\t},\r\n\t\tresult = {\r\n\t\t\tred: Math.round(parseInt(initial.red, 16) + (parseInt(final.red, 16) - parseInt(initial.red, 16)) * proportion).toString(16),\r\n\t\t\tgreen: Math.round(parseInt(initial.green, 16) + (parseInt(final.green, 16) - parseInt(initial.green, 16)) * proportion).toString(16),\r\n\t\t\tblue: Math.round(parseInt(initial.blue, 16) + (parseInt(final.blue, 16) - parseInt(initial.blue, 16)) * proportion).toString(16)\r\n\t\t},\r\n\t\tcolor;\r\n\r\n\t\tfor (color in result) {\r\n\t\t\tresult[color] = (result[color].length < 2) ? '0' + result[color] : result[color];\r\n\t\t}\r\n\r\n\t\treturn result.red + result.green + result.blue;\r\n\t}\r\n}\r\n\r\nfunction setCarriage(num, paletteType) {\r\n\r\n\tpaletteType = (paletteType !== undefined) ? paletteType : 'wave';\r\n\r\n\tif (paletteType === 'temp') {\r\n\r\n\t\tlet carriageCircle = tempCarriage.querySelector('.jssc__carriage'),\r\n\t\t\tcarriageCircleSpan = carriageCircle.querySelector('span'),\r\n\t\t\tcarriageCountSpan = tempCarriage.querySelector('.jssc__count span');\r\n\r\n\t\ttempCarriage.style.left = getLeft(num, 'temp') + 'px';\r\n\t\tcarriageCircle.style.backgroundColor = '#' + getColor(num, 'temp');\r\n\r\n\t\tcarriageCountSpan.innerHTML = num;\r\n\r\n\t} else if (paletteType === 'wave') {\r\n\r\n\t\tlet carriageCircle = waveCarriage.querySelector('.jssc__carriage'),\r\n\t\t\tcarriageCircleSpan = carriageCircle.querySelector('span'),\r\n\t\t\tcarriageCountSpan = waveCarriage.querySelector('.jssc__count span');\r\n\r\n\t\twaveCarriage.style.left = getLeft(num) + 'px';\r\n\t\tcarriageCircle.style.backgroundColor = '#' + getColor(num);\r\n\r\n\t\tif (num > 740) {\r\n\t\t\tcarriageCircleSpan.innerHTML = 'ИК';\r\n\t\t} else if (num < 380) {\r\n\t\t\tcarriageCircleSpan.innerHTML = 'УФ';\r\n\t\t} else {\r\n\t\t\tcarriageCircleSpan.innerHTML = '';\r\n\t\t}\r\n\r\n\t\tcarriageCountSpan.innerHTML = num;\r\n\t}\r\n}\r\n\r\nfunction nextStep(paletteType) {\r\n\r\n\tpaletteType = (paletteType !== undefined) ? paletteType : 'wave';\r\n\r\n\tif (paletteType === 'temp') {\r\n\r\n\t\tlet currentPosition = stepsObj.temp.indexOf(parseInt(tempCarriage.querySelector('.jssc__count span').innerHTML));\r\n\t\tif (currentPosition + 1 < stepsObj.temp.length) {\r\n\t\t\tsetCarriage(stepsObj.temp[currentPosition + 1], 'temp');\r\n\t\t}\r\n\t} else if (paletteType === 'wave') {\r\n\r\n\t\tlet currentPosition = stepsObj.wave.indexOf(parseInt(waveCarriage.querySelector('.jssc__count span').innerHTML));\r\n\t\tif (currentPosition + 1 < stepsObj.wave.length) {\r\n\t\t\tsetCarriage(stepsObj.wave[currentPosition + 1]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction prevStep(paletteType) {\r\n\r\n\tpaletteType = (paletteType !== undefined) ? paletteType : 'wave';\r\n\r\n\tif (paletteType === 'temp') {\r\n\r\n\t\tlet currentPosition = stepsObj.temp.indexOf(parseInt(tempCarriage.querySelector('.jssc__count span').innerHTML));\r\n\t\tif (currentPosition - 1 >= 0) {\r\n\t\t\tsetCarriage(stepsObj.temp[currentPosition - 1], 'temp');\r\n\t\t}\r\n\t} else if (paletteType === 'wave') {\r\n\r\n\t\tlet currentPosition = stepsObj.wave.indexOf(parseInt(waveCarriage.querySelector('.jssc__count span').innerHTML));\r\n\t\tif (currentPosition - 1 >= 0) {\r\n\t\t\tsetCarriage(stepsObj.wave[currentPosition - 1]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction dragAndDropCarriage(cursor, paletteType) {\r\n\r\n\tpaletteType = (paletteType !== undefined) ? paletteType : 'wave';\r\n\r\n\tif (paletteType === 'temp') {\r\n\r\n\t\tif (cursorPosition === null) {\r\n\t\t\tcursorPosition = cursor.pageX;\r\n\t\t} else {\r\n\t\t\tif (cursorPosition < cursor.pageX) {\r\n\t\t\t\tnextStep('temp');\r\n\t\t\t\tcursorPosition = null;\r\n\t\t\t}\r\n\t\t\tif (cursorPosition > cursor.pageX) {\r\n\t\t\t\tprevStep('temp');\r\n\t\t\t\tcursorPosition = null;\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (paletteType === 'wave') {\r\n\r\n\t\tif (cursorPosition === null) {\r\n\t\t\tcursorPosition = cursor.pageX;\r\n\t\t} else {\r\n\t\t\tif (cursorPosition < cursor.pageX) {\r\n\t\t\t\tnextStep();\r\n\t\t\t\tcursorPosition = null;\r\n\t\t\t}\r\n\t\t\tif (cursorPosition > cursor.pageX) {\r\n\t\t\t\tprevStep();\r\n\t\t\t\tcursorPosition = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n  * Функция использует закон смещения Вина\r\n  * для получения значения длины волны в нм\r\n  * из значения температуры в кельвинах \r\n  * @param {number} kelvins - Температура в кельвинах\r\n  */\r\nfunction getWaveFromTemp(kelvins) {\r\n/*\tПостоянная Вина, изм. в м*К */\r\n\tlet b = 0.002898;\r\n\r\n\treturn b / kelvins;\r\n}\r\n\r\n\r\nfunction getNearStep(inputNum, paletteType) {\r\n\r\n\tpaletteType = (paletteType !== undefined) ? paletteType : 'wave';\r\n\r\n\tif (paletteType === 'temp') {\r\n\r\n\t\tfor (let i = 0; i < stepsObj.temp.length - 1; i++) {\r\n\t\t\tif ((inputNum >= stepsObj.temp[i]) && (inputNum <= stepsObj.temp[i + 1])) {\r\n\t\t\t\treturn (((stepsObj.temp[i + 1] - stepsObj.temp[i]) / 2) > (inputNum - stepsObj.temp[i])) ?\r\n\t\t\t\tstepsObj.temp[i] : stepsObj.temp[i + 1];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} else if (paletteType === 'wave') {\r\n\r\n\t\tfor (let i = 0; i < stepsObj.wave.length - 1; i++) {\r\n\t\t\tif ((inputNum >= stepsObj.wave[i]) && (inputNum <= stepsObj.wave[i + 1])) {\r\n\t\t\t\treturn (((stepsObj.wave[i + 1] - stepsObj.wave[i]) / 2) > (inputNum - stepsObj.wave[i])) ?\r\n\t\t\t\tstepsObj.wave[i] : stepsObj.wave[i + 1];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isNumeric(str) {\r\n\treturn !isNaN(parseFloat(str)) && isFinite(str);\r\n}\r\n\r\nfunction isInputCorrect(inputNum, paletteType) {\r\n\r\n\tpaletteType = (paletteType !== undefined) ? paletteType : 'wave';\r\n\r\n\tif (inputNum.length === 0) {\r\n\t\treturn 'empty';\r\n\t}\r\n\r\n\tif (!isNumeric(inputNum)) {\r\n\t\treturn 'Допустимо вводить только числа!';\r\n\t}\r\n\r\n\tif (paletteType === 'temp') {\r\n\t\tif (inputNum < stepsObj.temp[0]) return 'Минимальное допустимое значение: ' + stepsObj.temp[0];\r\n\t\tif (inputNum > stepsObj.temp[stepsObj.temp.length - 1]) return 'Максимальное допустимое значение: ' + stepsObj.temp[stepsObj.temp.length - 1]; \r\n\t} else if (paletteType === 'wave') {\r\n\t\tif (inputNum < stepsObj.wave[0]) return 'Минимальное допустимое значение: ' + stepsObj.wave[0];\r\n\t\tif (inputNum > stepsObj.wave[stepsObj.wave.length - 1]) return 'Максимальное допустимое значение: ' + stepsObj.wave[stepsObj.wave.length - 1];\r\n\t}\r\n\r\n\treturn 'ok';\r\n}","/*jssc.querySelector('.jssc__type-link').onclick = function() {\r\n\tjsscContentReplace(this);\r\n}*/\r\njsscTempContent.querySelector('.jssc__type-link').onclick = function() {\r\n\tjsscContentToggle(true);\r\n}\r\n\r\njsscWaveContent.querySelector('.jssc__type-link').onclick = function() {\r\n\tjsscContentToggle(false);\r\n}\r\n\r\njssc.querySelector('.jssc__modal-close').onclick = function() {\r\n\tjsscToggle(true);\r\n}\r\n\r\njsscWaveContent.querySelector('.jssc__left-arrow').onclick = function() {\r\n\tprevStep();\r\n}\r\n\r\njsscWaveContent.querySelector('.jssc__right-arrow').onclick = function() {\r\n\tnextStep();\r\n}\r\n\r\njsscTempContent.querySelector('.jssc__left-arrow').onclick = function() {\r\n\tprevStep('temp');\r\n}\r\n\r\njsscTempContent.querySelector('.jssc__right-arrow').onclick = function() {\r\n\tnextStep('temp');\r\n}\r\n\r\njsscWaveContent.querySelector('.jssc__carriage').onmousedown = function() {\r\n\tlet inputError = jsscWaveContent.querySelector('.jssc__input-error'),\r\n\t\tinputField = jsscWaveContent.querySelector('.jssc__input input');\r\n\tif (inputError.classList.contains('jssc__input-error_active')) {\r\n\t\tinputError.classList.remove('jssc__input-error_active');\r\n\t}\r\n\tinputError.innerHTML = 'Введите значение длины волны (в нм) вручную, или используйте селектор цвета.';\r\n\tinputField.value = '';\r\n\r\n\tjssc.style.cursor = 'none';\r\n\tjssc.querySelector('.jssc__left-arrow').style.cursor = 'none';\r\n\tjssc.querySelector('.jssc__right-arrow').style.cursor = 'none';\r\n\twaveCarriage.querySelector('.jssc__carriage').style.boxShadow = '0 0 15px rgba(0, 0, 0, 0.5)';\r\n\tjssc.onmousemove = function(cursor) {\r\n\t\tdragAndDropCarriage(cursor);\r\n\t}\r\n}\r\n\r\njsscTempContent.querySelector('.jssc__carriage').onmousedown = function() {\r\n\tlet inputError = jsscTempContent.querySelector('.jssc__input-error'),\r\n\t\tinputField = jsscTempContent.querySelector('.jssc__input input');\r\n\tif (inputError.classList.contains('.jssc__input-error_active')) {\r\n\t\tinputError.classList.remove('.jssc__input-error_active');\r\n\t}\r\n\tinputError.innerHTML = 'Введите значение температуры (в кельвинах) вручную, или используйте селектор цвета.';\r\n\tinputField.value = '';\r\n\r\n\tjssc.style.cursor = 'none';\r\n\tjssc.querySelector('.jssc__left-arrow').style.cursor = 'none';\r\n\tjssc.querySelector('.jssc__right-arrow').style.cursor = 'none';\r\n\ttempCarriage.querySelector('.jssc__carriage').style.boxShadow = '0 0 15px rgba(0, 0, 0, 0.5)';\r\n\tjssc.onmousemove = function(cursor) {\r\n\t\tdragAndDropCarriage(cursor, 'temp');\r\n\t}\r\n}\r\n\r\njssc.onmouseup = function() {\r\n\tjssc.style.cursor = '';\r\n\tjssc.querySelector('.jssc__left-arrow').style.cursor = '';\r\n\tjssc.querySelector('.jssc__right-arrow').style.cursor = '';\r\n\ttempCarriage.querySelector('.jssc__carriage').style.boxShadow = '';\r\n\twaveCarriage.querySelector('.jssc__carriage').style.boxShadow = '';\r\n\tthis.onmousemove = function() {};\r\n}\r\n\r\njsscWaveContent.querySelector('.jssc__input input').oninput = function() {\r\n\tlet inputError = jsscWaveContent.querySelector('.jssc__input-error');\r\n\tif (isInputCorrect(this.value) === 'ok') {\r\n\t\tsetCarriage(getNearStep(this.value));\r\n\t\tif (inputError.classList.contains('jssc__input-error_active')) {\r\n\t\t\tinputError.classList.remove('jssc__input-error_active');\r\n\t\t}\r\n\t\tinputError.innerHTML = 'Ближайшее существующее значение: ' + getNearStep(this.value);\r\n\t} else if (isInputCorrect(this.value) === 'empty') {\r\n\t\tif (inputError.classList.contains('jssc__input-error_active')) {\r\n\t\t\tinputError.classList.remove('jssc__input-error_active');\r\n\t\t}\r\n\t\tinputError.innerHTML = 'Введите значение длины волны (в нм) вручную, или используйте селектор цвета.';\r\n\t} else {\r\n\t\tif (!inputError.classList.contains('jssc__input-error_active')) {\r\n\t\t\tinputError.classList.add('jssc__input-error_active');\r\n\t\t}\r\n\t\tinputError.innerHTML = isInputCorrect(this.value);\r\n\t}\r\n}\r\n\r\njsscTempContent.querySelector('.jssc__input input').oninput = function() {\r\n\tlet inputError = jsscTempContent.querySelector('.jssc__input-error');\r\n\tif (isInputCorrect(this.value, 'temp') === 'ok') {\r\n\t\tsetCarriage(getNearStep(this.value, 'temp'), 'temp');\r\n\t\tif (inputError.classList.contains('jssc__input-error_active')) {\r\n\t\t\tinputError.classList.remove('jssc__input-error_active');\r\n\t\t}\r\n\t\tinputError.innerHTML = 'Ближайшее существующее значение: ' + getNearStep(this.value, 'temp');\r\n\t} else if (isInputCorrect(this.value, 'temp') === 'empty') {\r\n\t\tif (inputError.classList.contains('jssc__input-error_active')) {\r\n\t\t\tinputError.classList.remove('jssc__input-error_active');\r\n\t\t}\r\n\t\tinputError.innerHTML = 'Введите значение температуры (в кельвинах) вручную, или используйте селектор цвета.';\r\n\t} else {\r\n\t\tif (!inputError.classList.contains('jssc__input-error_active')) {\r\n\t\t\tinputError.classList.add('jssc__input-error_active');\r\n\t\t}\r\n\t\tinputError.innerHTML = isInputCorrect(this.value, 'temp');\r\n\t}\r\n}"]}